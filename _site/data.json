[{"permalink":"//","layout":"default","title":"OSS Review Toolkit (ORT) 란","content":"# OSS Review Toolkit (ORT) 란\n\nOSS Review Toolkit (ORT)은 Project에 포함된 Open Source Software의 dependency 정보를 자동으로 추출하고, 해당 Open Source Software를 다운로드 받아 Source Code에 대하여 String Search를 기반으로 분석하는 Open Source tool([ScanCode](https://github.com/nexB/scancode-toolkit), [Askalono](https://github.com/amzn/askalono), [lc](https://github.com/boyter/lc), [Licensee](https://github.com/benbalter/licensee))을 이용하여 License, Copyright등의 정보를 추출합니다. 검출된 License에 대하여 사용자가 정의한 Policy를 적용할 수 있으며, 분석 결과를 다양한 형태의 Report로 생성합니다. \n\n## 특징\n- [Apache-2.0](https://spdx.org/licenses/Apache-2.0.html)으로 배포되는 Open Source로, 무료로 사용할 수 있고, Source Code 수정이 가능합니다.\n- [Kotlin](https://kotlinlang.org/)으로 작성되었으며 build system으로 [Gradle](https://gradle.org/)을 이용합니다. \n- 프로젝트의 transitive dependency의 tree와 package의 meta data를 분석합니다.\n- Source Code에 대한 License text 분석시, Scanner를 선택 가능합니다.\n- 사용자가 정의한 License Policy를 적용할 수 있습니다.\n- 다양한 포맷의 Report를 생성할 수 있습니다.\n\n## 관련 링크\n- 배포처 : [https://github.com/oss-review-toolkit/ort](https://github.com/oss-review-toolkit/ort)\n","dir":"/","name":"README.md","path":"README.md","url":"/"},{"layout":"page","title":"About","permalink":"/about/","content":"<p>This is the base Jekyll theme. You can find out more info about customizing your Jekyll theme, as well as basic Jekyll usage documentation at <a href=\"https://jekyllrb.com/\">jekyllrb.com</a></p>\n\n<p>You can find the source code for Minima at GitHub:\n<a href=\"https://github.com/jekyll\">jekyll</a> /\n<a href=\"https://github.com/jekyll/minima\">minima</a></p>\n\n<p>You can find the source code for Jekyll at GitHub:\n<a href=\"https://github.com/jekyll\">jekyll</a> /\n<a href=\"https://github.com/jekyll/jekyll\">jekyll</a></p>\n\n","dir":"/about/","name":"about.markdown","path":"blog_test/about.markdown","url":"/about/"},{"layout":"home","title":null,"content":"\n","dir":"/blog_test/","name":"index.markdown","path":"blog_test/index.markdown","url":"/blog_test/"},{"sort":1,"published":true,"lang":"en","permalink":"/about/","layout":"default","title":"Source Install","content":"<h1 id=\"source-install\">Source Install</h1>\n<pre><code class=\"language-note\">OSS Review Toolkit Source Code가 [Github Repository](https://github.com/oss-review-toolkit/ort)에서 배포됩니다.\n</code></pre>  \n\n<h2 id=\"필요-사항\">필요 사항</h2>\n<ul>\n <li>Linux / windows / macOS</li>\n <li>OpenJDK 11 or later</li>\n <li>Git</li>\n <li>Gradle</li>\n</ul>\n\n<h2 id=\"설치--방법\">설치 방법</h2>\n\n<h3 id=\"0-source-code-다운로드\">0. Source Code 다운로드</h3>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ git clone https://github.com/oss-review-toolkit/ort.git\n</code></pre>  </div></div>\n\n<h3 id=\"1-build\">1. Build</h3>\n\n<h4 id=\"build-using-docker\">Build using Docker</h4>\n<ol>\n <li>필요 사항\n <ul>\n <li>Docker 18.09 이후 버전</li>\n <li>Enable BuildKit for Docker</li>\n </ul>\n </li>\n <li>Docker build 명령으로 Docker 이미지 생성\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ cd ort\n~/ort$ docker build -t ort .\n</code></pre>  </div> </div>\n </li>\n <li>생성된 Docker 이미지 확인\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nort                 latest              b8348af14a4f        3 days ago          4.24GB\n</code></pre>  </div> </div>\n </li>\n</ol>\n\n<h4 id=\"build-natively\">Build natively</h4>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ cd ort\n~/ort$ ./gradlew installDist\n</code></pre>  </div></div>\n","dir":"/about/","name":"1_analyze-en.md","path":"run/1_analyze-en.md","url":"/about/"},{"sort":1,"published":true,"lang":"ko","layout":"default","title":"Source Install","content":"<h1 id=\"source-install\">Source Install</h1>\n<pre><code class=\"language-note\">OSS Review Toolkit Source Code가 [Github Repository](https://github.com/oss-review-toolkit/ort)에서 배포됩니다.\n</code></pre>  \n\n<h2 id=\"필요-사항\">필요 사항</h2>\n<ul>\n <li>Linux / windows / macOS</li>\n <li>OpenJDK 11 or later</li>\n <li>Git</li>\n <li>Gradle</li>\n</ul>\n\n<h2 id=\"설치--방법\">설치 방법</h2>\n\n<h3 id=\"0-source-code-다운로드\">0. Source Code 다운로드</h3>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ git clone https://github.com/oss-review-toolkit/ort.git\n</code></pre>  </div></div>\n\n<h3 id=\"1-build\">1. Build</h3>\n\n<h4 id=\"build-using-docker\">Build using Docker</h4>\n<ol>\n <li>필요 사항\n <ul>\n <li>Docker 18.09 이후 버전</li>\n <li>Enable BuildKit for Docker</li>\n </ul>\n </li>\n <li>Docker build 명령으로 Docker 이미지 생성\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ cd ort\n~/ort$ docker build -t ort .\n</code></pre>  </div> </div>\n </li>\n <li>생성된 Docker 이미지 확인\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nort                 latest              b8348af14a4f        3 days ago          4.24GB\n</code></pre>  </div> </div>\n </li>\n</ol>\n\n<h4 id=\"build-natively\">Build natively</h4>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ cd ort\n~/ort$ ./gradlew installDist\n</code></pre>  </div></div>\n","dir":"/run/","name":"1_analyze.md","path":"run/1_analyze.md","url":"/run/1_analyze.html"},{"sort":1,"published":true,"lang":"en","layout":"default","title":"How to Run","content":"<h1 id=\"how-to-run\">How to Run</h1>\n\n<pre><code class=\"language-note\">ORT는 Linux, Windows, macOS에 대하여 지원합니다.  \n\nORT를 실행하려면 최소한 Java 11이 필요합니다. 메모리 및 CPU 요구 사항은 분석할 프로젝트의 크기와 유형에 따라 다르지만, 8GiB 메모리(-Xmx = 8g)로 Java를 구성하고 코어가 4개 이상인 CPU를 권장합니다.  \n\nORT에서 프로젝트를 분석하기 위해 필요한 외부 도구는 ort requirements 명령으로 조회 가능합니다. 패키지 관리자가 목록에 없는 경우는 ORT에 내부적으로 직접 통합되며 외부 도구를 설치할 필요가 없는 경우입니다.\n\n[공식 리파지토리](https://github.com/oss-review-toolkit/ort)에서 Source Code를 다운로드 받을 수 있고, Build시 Docker 이미지 또는 실행 파일을 생성할 수 있습니다. \n\n</code></pre>  \n\n<ul>\n <li><a href=\"/blog/run/1_analyze.html\">Source Install</a></li>\n <li><a href=\"/blog/run/README-en.html\">How to Run</a></li>\n <li><a href=\"/blog/run/2_check.html\">설치 확인 방법</a></li>\n</ul>\n","dir":"/run/","name":"README-en.md","path":"run/README-en.md","url":"/run/README-en.html"},{"sort":1,"published":true,"lang":"ko","permalink":"/run/","layout":"default","title":"How to Run","content":"<h1 id=\"how-to-run\">How to Run</h1>\n\n<pre><code class=\"language-note\">ORT는 Linux, Windows, macOS에 대하여 지원합니다.  \n\nORT를 실행하려면 최소한 Java 11이 필요합니다. 메모리 및 CPU 요구 사항은 분석할 프로젝트의 크기와 유형에 따라 다르지만, 8GiB 메모리(-Xmx = 8g)로 Java를 구성하고 코어가 4개 이상인 CPU를 권장합니다.  \n\nORT에서 프로젝트를 분석하기 위해 필요한 외부 도구는 ort requirements 명령으로 조회 가능합니다. 패키지 관리자가 목록에 없는 경우는 ORT에 내부적으로 직접 통합되며 외부 도구를 설치할 필요가 없는 경우입니다.\n\n[공식 리파지토리](https://github.com/oss-review-toolkit/ort)에서 Source Code를 다운로드 받을 수 있고, Build시 Docker 이미지 또는 실행 파일을 생성할 수 있습니다. \n\n</code></pre>  \n\n<ul>\n <li><a href=\"/blog/run/1_analyze.html\">Source Install</a></li>\n <li><a href=\"/blog/run/README-en.html\">How to Run</a></li>\n <li><a href=\"/blog/run/2_check.html\">설치 확인 방법</a></li>\n</ul>\n","dir":"/run/","name":"README.md","path":"run/README.md","url":"/run/"},{"sort":2,"published":true,"layout":"default","title":"설치 확인 방법","content":"<h1 id=\"설치-확인-방법\">설치 확인 방법</h1>\n\n<h2 id=\"docker를-이용한-실행-방법\">Docker를 이용한 실행 방법</h2>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$docker run -v /workspace:/project ort --info analyze -f JSON -i /project -o /project/ort/analyzer\n</code></pre>  </div></div>\n<h3 id=\"parameter\">Parameter</h3>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$docker run \\\n  -v $PWD/:/project  \\ # Mount current working directory into /project to use as input.\n  ort --info analyze \\\n  -c /project/ort/config.hocon \\ # Use file from \"&lt;workingdirectory&gt;/ort\" as config.\n  analyze (...) # Insert further arguments for the command.\n</code></pre>  </div></div>\n<ul>\n <li>v 옵션 : 공유할 호스트 디렉토리와 컨테이너 디렉토리를 설정</li>\n <li>c 옵션 : Config 파일 설정</li>\n <li>analyze (…) : <a href=\"https://lge-oss.github.io/oss-review-toolkit-guide/use/1_analyze.html\">ort의 실행 arguments</a></li>\n</ul>\n\n<h2 id=\"build한-소스-코드-기반-실행-방법\">Build한 소스 코드 기반 실행 방법</h2>\n<h3 id=\"추가적인-tool이-미설치된-것인지-확인\">추가적인 Tool이 미설치된 것인지 확인</h3>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>~/ort$./cli/build/install/ort/bin/ort requirements\n</code></pre>  </div></div>\n<h3 id=\"실행-command-확인-방법\">실행 Command 확인 방법</h3>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>~/ort$./cli/build/install/ort/bin/ort --help\n</code></pre>  </div></div>\n","dir":"/run/","name":"2_check.md","path":"run/2_check.md","url":"/run/2_check.html"}]